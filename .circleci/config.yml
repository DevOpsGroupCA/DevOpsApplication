
version: 2.1

jobs:
  build-and-deploy-backend:
    docker:
      - image: cimg/ruby:3.2-node
    steps:
      - checkout
      - run:
          name: Install Backend Dependencies
          command: |
            cd backend
            gem install bundler
            bundle install
      - run:
          name: Deploy Backend to EC2
          command: |
            echo "$SSH_PRIVATE_KEY" > key.pem
            chmod 600 key.pem
            ssh -i key.pem -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << 'EOF'
              mkdir -p /var/www/crud-todos-backend
              cd /var/www/crud-todos-backend
              git pull origin main || git clone git@github.com/DevOpsGroupCA/DevOpsApplication/crud-todos-app.git .
              cd backend
              bundle install
              rails db:migrate
              pkill -f "rails server" || true
              nohup rails server -b 0.0.0.0 -p 5000 &
            EOF

  build-and-deploy-frontend:
    docker:
      - image: cimg/node:16.20
    steps:
      - checkout
      - run:
          name: Install Frontend Dependencies
          command: |
            cd frontend
            npm install
      - run:
          name: Build Frontend
          command: |
            cd frontend
            npm run build
      - run:
          name: Deploy Frontend to EC2
          command: |
            echo "$SSH_PRIVATE_KEY" > key.pem
            chmod 600 key.pem
            ssh -i key.pem -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << 'EOF'
              mkdir -p /var/www/crud-todos
              cd /var/www/crud-todos
              git pull origin main || git clone git@github.com/DevOpsGroupCA/DevOpsApplication/crud-todos-app.git .
              cd frontend
              npm install
              npm run build
              pkill -f "serve" || true
              npm install -g serve
              nohup serve -s build -l 3000 &
            EOF

workflows:
  deploy-all:
    jobs:
      - build-and-deploy-backend:
          filters:
            branches:
              only: main
      - build-and-deploy-frontend:
          filters:
            branches:
              only: main
          requires:
            - build-and-deploy-backend  # Ensures backend deploys first
